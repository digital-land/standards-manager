"""initial migration

Revision ID: d98cf4eea53f
Revises:
Create Date: 2023-05-16 14:59:12.861000

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d98cf4eea53f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "attribution",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("attribution", sa.Text(), nullable=False),
        sa.Column("text", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("attribution"),
    )
    op.create_table(
        "datatype",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("datatype", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("datatype"),
    )
    op.create_table(
        "licence",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("licence", sa.Text(), nullable=False),
        sa.Column("text", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("licence"),
    )
    op.create_table(
        "project_status",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("project_status", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("project_status"),
    )
    op.create_table(
        "provision_reason",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("provision_reason", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("provision_reason"),
    )
    op.create_table(
        "realm",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("reference", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "specification_status",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("specification_status", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("specification_status"),
    )
    op.create_table(
        "theme",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("theme", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("theme"),
    )
    op.create_table(
        "typology",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("typology", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("plural", sa.Text(), nullable=True),
        sa.Column("wikidata", sa.Text(), nullable=True),
        sa.Column("wikipedia", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("typology"),
    )
    op.create_table(
        "dataset",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("attribution_id", sa.Text(), nullable=True),
        sa.Column("collection", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("key_field", sa.Text(), nullable=True),
        sa.Column("entity_minimum", sa.BigInteger(), nullable=True),
        sa.Column("entity_maximum", sa.BigInteger(), nullable=True),
        sa.Column("licence_id", sa.Text(), nullable=True),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column(
            "paint_options", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("plural", sa.Text(), nullable=True),
        sa.Column("phase", sa.Text(), nullable=True),
        sa.Column("prefix", sa.Text(), nullable=True),
        sa.Column("realm", sa.Text(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("themes", sa.Text(), nullable=True),
        sa.Column("typology_id", sa.Text(), nullable=True),
        sa.Column("wikidata", sa.Text(), nullable=True),
        sa.Column("wikipedia", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["attribution_id"],
            ["attribution.attribution"],
        ),
        sa.ForeignKeyConstraint(
            ["licence_id"],
            ["licence.licence"],
        ),
        sa.ForeignKeyConstraint(
            ["typology_id"],
            ["typology.typology"],
        ),
        sa.PrimaryKeyConstraint("dataset"),
    )
    op.create_table(
        "field",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("field", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("datatype_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["datatype_id"],
            ["datatype.datatype"],
        ),
        sa.PrimaryKeyConstraint("field"),
    )
    op.create_table(
        "specification",
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("specification", sa.Text(), nullable=False),
        sa.Column("specification_status_id", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["specification_status_id"],
            ["specification_status.specification_status"],
        ),
        sa.PrimaryKeyConstraint("specification"),
    )
    op.create_table(
        "dataset_field",
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("field", sa.Text(), nullable=False),
        sa.Column("guidance", sa.Text(), nullable=True),
        sa.Column("hint", sa.Text(), nullable=True),
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["field"],
            ["field.field"],
        ),
        sa.PrimaryKeyConstraint("dataset", "field"),
    )
    op.create_table(
        "specification_dataset",
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("specification", sa.Text(), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["specification"],
            ["specification.specification"],
        ),
        sa.PrimaryKeyConstraint("dataset", "specification"),
    )
    op.create_table(
        "specification_dataset_field",
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("specification", sa.Text(), nullable=False),
        sa.Column("field", sa.Text(), nullable=False),
        sa.Column("guidance", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["field"],
            ["specification.specification"],
        ),
        sa.ForeignKeyConstraint(
            ["specification"],
            ["specification.specification"],
        ),
        sa.PrimaryKeyConstraint("dataset", "specification", "field"),
    )
    op.create_table(
        "typology_field",
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("field", sa.Text(), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=True),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["field"],
            ["field.field"],
        ),
        sa.PrimaryKeyConstraint("dataset", "field"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("typology_field")
    op.drop_table("specification_dataset_field")
    op.drop_table("specification_dataset")
    op.drop_table("dataset_field")
    op.drop_table("specification")
    op.drop_table("field")
    op.drop_table("dataset")
    op.drop_table("typology")
    op.drop_table("theme")
    op.drop_table("specification_status")
    op.drop_table("realm")
    op.drop_table("provision_reason")
    op.drop_table("project_status")
    op.drop_table("licence")
    op.drop_table("datatype")
    op.drop_table("attribution")
    # ### end Alembic commands ###
